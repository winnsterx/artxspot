{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/components/Playlists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Col } from \"antd\";\nimport Playlist from \"./Playlist\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Playlists({\n  token\n}) {\n  const [playlists, setPlaylists] = useState({});\n  const [tracks, setTracks] = useState([]);\n  useEffect(() => {\n    if (!Object.keys(playlists).length) {\n      getPlaylists();\n    }\n\n    console.log(\"Playlists: \", playlists);\n    console.log(\"playlists length: \", Object.keys(playlists).length);\n    console.log(\"tracks: \", tracks);\n  });\n\n  async function getPlaylists() {\n    spotifyApi.setAccessToken(token);\n    let pls = await getPlaylistsHelper();\n\n    if (pls) {\n      setPlaylists(pls.items);\n    } else {\n      console.log(\"Error in fetching playlists. Check request in Spotify API.\");\n    }\n  }\n\n  async function getPlaylistsHelper() {\n    try {\n      return await spotifyApi.getUserPlaylists();\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async function selectPlaylist(playlist) {\n    console.log(\"Playlist ID: \", playlist);\n    let tracks = await getPlaylistTracks(playlist.id);\n\n    if (tracks) {\n      setTracks(tracks);\n    } else {\n      console.log(\"Error in fetching playlist's tracks. Check request in Spotify API.\");\n    }\n  }\n\n  async function getPlaylistTracks(id) {\n    try {\n      return await spotifyApi.getPlaylistTracks(id);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  function buildPlaylists() {\n    let arr = [];\n\n    for (let i = 0; i < playlists.length; i++) {\n      let curr = playlists[i];\n      arr.push( /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => selectPlaylist(curr),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        size: \"small\",\n        title: curr.name,\n        hoverable: true,\n        cover: /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"example\",\n          src: curr.images[0].url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 22\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))));\n    }\n\n    return arr;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Playlist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/components/Playlists.js"],"names":["React","useState","useEffect","Card","Col","Playlist","SpotifyWebApi","spotifyApi","Playlists","token","playlists","setPlaylists","tracks","setTracks","Object","keys","length","getPlaylists","console","log","setAccessToken","pls","getPlaylistsHelper","items","getUserPlaylists","error","selectPlaylist","playlist","getPlaylistTracks","id","buildPlaylists","arr","i","curr","push","name","images","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Col } from \"antd\";\nimport Playlist from \"./Playlist\";\n\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Playlists({ token }) {\n  const [playlists, setPlaylists] = useState({});\n  const [tracks, setTracks] = useState([]);\n\n  useEffect(() => {\n    if (!Object.keys(playlists).length) {\n      getPlaylists();\n    }\n    console.log(\"Playlists: \", playlists);\n    console.log(\"playlists length: \", Object.keys(playlists).length);\n    console.log(\"tracks: \", tracks);\n  });\n\n  async function getPlaylists() {\n    spotifyApi.setAccessToken(token);\n    let pls = await getPlaylistsHelper();\n    if (pls) {\n      setPlaylists(pls.items);\n    } else {\n      console.log(\"Error in fetching playlists. Check request in Spotify API.\");\n    }\n  }\n\n  async function getPlaylistsHelper() {\n    try {\n      return await spotifyApi.getUserPlaylists();\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async function selectPlaylist(playlist) {\n    console.log(\"Playlist ID: \", playlist);\n    let tracks = await getPlaylistTracks(playlist.id);\n    if (tracks) {\n      setTracks(tracks);\n    } else {\n      console.log(\n        \"Error in fetching playlist's tracks. Check request in Spotify API.\"\n      );\n    }\n  }\n\n  async function getPlaylistTracks(id) {\n    try {\n      return await spotifyApi.getPlaylistTracks(id);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  function buildPlaylists() {\n    let arr = [];\n    for (let i = 0; i < playlists.length; i++) {\n      let curr = playlists[i];\n      arr.push(\n        <Col span={8}>\n          <div onClick={() => selectPlaylist(curr)}>\n            <Card\n              size=\"small\"\n              title={curr.name}\n              hoverable\n              cover={<img alt=\"example\" src={curr.images[0].url} />}\n            ></Card>\n          </div>\n        </Col>\n      );\n    }\n    return arr;\n  }\n\n  return (\n    <div>\n      {/* {tracks.length === 0 ? (\n        <Row gutter={16}> {buildPlaylists()}</Row>\n      ) : (\n        <Playlist />\n      )} */}\n      <Playlist />\n    </div>\n  );\n}\n\nexport default Playlists;\n"]},"metadata":{},"sourceType":"module"}