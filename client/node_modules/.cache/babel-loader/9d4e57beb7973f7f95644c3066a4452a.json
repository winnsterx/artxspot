{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/webapps/metspot/src/components/Artwork.js\";\nimport React from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nconst {\n  Title\n} = Typography;\n\nfunction Artwork({\n  artwork\n}) {\n  const title = artwork.title; // INSTEAD of parsing like I AM now, I should be making API calls to get\n  // artist name: https://api.artsy.net/api/artists/?artwork_id={id}\n  // year / title: https://api.artsy.net/api/artworks/id --> res.date, etc...\n  //   const artist = title.substring(0, title.indexOf(\",\"));\n  //   let year = title.slice(title.length - 5);\n  //   year = year.slice(0, -1);\n  //   const parsedYear = parseInt(year, 10);\n  //   let endName = title.length;\n  //   if (!isNaN(parsedYear)) {\n  //     console.log(\"Year is provided in title: \", year);\n  //     endName = title.lastIndexOf(\"(\") - 1;\n  //   }\n  //   const name = title.substring(title.indexOf(\",\") + 2, endName);\n\n  const description = artwork.description;\n  const permalink = artwork._links.permalink.href;\n  const thumbnail = artwork._links.thumbnail.href;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, console.log(\"artwork: \", artwork), /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-around\",\n    align: \"middle\",\n    style: {\n      minHeight: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnail,\n    alt: title,\n    width: \"90%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, description.toLowerCase()), /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: permalink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"learn more / get more a more HD look lolll\"))), /*#__PURE__*/React.createElement(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Artwork;","map":{"version":3,"sources":["/Users/winker.xiao/webapps/metspot/src/components/Artwork.js"],"names":["React","Row","Col","Typography","Title","Artwork","artwork","title","description","permalink","_links","href","thumbnail","console","log","minHeight","textAlign","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,QAAqC,MAArC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,UAAlB;;AAEA,SAASE,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,QAAMC,KAAK,GAAGD,OAAO,CAACC,KAAtB,CAD4B,CAE5B;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,QAAMC,SAAS,GAAGH,OAAO,CAACI,MAAR,CAAeD,SAAf,CAAyBE,IAA3C;AACA,QAAMC,SAAS,GAAGN,OAAO,CAACI,MAAR,CAAeE,SAAf,CAAyBD,IAA3C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB,CADH,eAEE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAC,QAAlC;AAA2C,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEH,SAAV;AAAqB,IAAA,GAAG,EAAEL,KAA1B;AAAiC,IAAA,KAAK,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBT,KAAlB,CADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBC,WAAW,CAACS,WAAZ,EAAlB,CAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAER,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,CAHF,CANF,eAaE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF,CADF;AAoBD;;AAED,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport { Row, Col, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nfunction Artwork({ artwork }) {\n  const title = artwork.title;\n  // INSTEAD of parsing like I AM now, I should be making API calls to get\n  // artist name: https://api.artsy.net/api/artists/?artwork_id={id}\n  // year / title: https://api.artsy.net/api/artworks/id --> res.date, etc...\n\n  //   const artist = title.substring(0, title.indexOf(\",\"));\n  //   let year = title.slice(title.length - 5);\n  //   year = year.slice(0, -1);\n  //   const parsedYear = parseInt(year, 10);\n\n  //   let endName = title.length;\n  //   if (!isNaN(parsedYear)) {\n  //     console.log(\"Year is provided in title: \", year);\n  //     endName = title.lastIndexOf(\"(\") - 1;\n  //   }\n\n  //   const name = title.substring(title.indexOf(\",\") + 2, endName);\n\n  const description = artwork.description;\n  const permalink = artwork._links.permalink.href;\n  const thumbnail = artwork._links.thumbnail.href;\n\n  return (\n    <div className=\"page\">\n      {console.log(\"artwork: \", artwork)}\n      <Row justify=\"space-around\" align=\"middle\" style={{ minHeight: \"100%\" }}>\n        <Col span={2} />\n        <Col span={12}>\n          <img src={thumbnail} alt={title} width=\"90%\" />\n        </Col>\n        <Col span={1} />\n        <Col span={7} style={{ textAlign: \"left\" }}>\n          <Title level={2}>{title}</Title>\n          <Title level={3}>{description.toLowerCase()}</Title>\n          <Title level={3}>\n            <a href={permalink}>learn more / get more a more HD look lolll</a>\n          </Title>\n        </Col>\n        <Col span={2} />\n      </Row>\n    </div>\n  );\n}\n\nexport default Artwork;\n"]},"metadata":{},"sourceType":"module"}