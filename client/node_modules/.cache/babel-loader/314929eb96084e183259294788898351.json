{"ast":null,"code":"import _slicedToArray from\"/Users/winker.xiao/webapps/metspot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Spin,Typography,Row}from\"antd\";import request from\"superagent\";import Artwork from\"./Artwork\";var Title=Typography.Title;var apiUrl=\"https://api.artsy.net/api/search?type=\";function Generator(_ref){var tracks=_ref.tracks;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),artwork=_useState2[0],setArtwork=_useState2[1];function generateArt(){request.get(\"/generate\").then(function(response){var query=collectNames();request.get(apiUrl).set(\"X-Xapp-Token\",response.text).query({q:query}).query({type:\"artwork\"}).then(function(res){var artworks=res.body._embedded.results;console.log(\"artsy's relevant artwork: \",artworks);console.log(\"token: \",response.text);var chosen=artworks[Math.floor(Math.random()*artworks.length)];setArtwork(chosen);}).catch(function(err){return console.log(err);});}).catch(function(error){return console.log(error);});}// Returns the songNames array of the first 20 songs\nfunction collectNames(){var songs=tracks.items;var songNames=[];var limit=10;if(songs.length<limit){limit=songs.length;}for(var i=0;i<limit;i++){var currSongName=songs[i].track.name;currSongName.slice(0,currSongName.indexOf(\"-\"));// strips string after '-' to get just name\nvar n=currSongName.indexOf(\"(\");currSongName=currSongName.substring(0,n!==-1?n:currSongName.length);// strips string after '-' to get just name\nsongNames.push(currSongName);}return songNames.join(\" \");}return/*#__PURE__*/React.createElement(\"div\",{className:\"page\"},artwork?/*#__PURE__*/React.createElement(Artwork,{artwork:artwork}):/*#__PURE__*/React.createElement(\"div\",{className:\"page\"},/*#__PURE__*/React.createElement(Row,{justify:\"center\",align:\"middle\",style:{minHeight:\"100%\"}},/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(Title,{level:3},\"generating...\"),/*#__PURE__*/React.createElement(Spin,{size:\"large\"}),generateArt()))));}export default Generator;","map":{"version":3,"sources":["/Users/winker.xiao/webapps/metspot/src/components/Generator.js"],"names":["React","useState","Spin","Typography","Row","request","Artwork","Title","apiUrl","Generator","tracks","artwork","setArtwork","generateArt","get","then","response","query","collectNames","set","text","q","type","res","artworks","body","_embedded","results","console","log","chosen","Math","floor","random","length","catch","err","error","songs","items","songNames","limit","i","currSongName","track","name","slice","indexOf","n","substring","push","join","minHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Spin, Typography, Row } from \"antd\";\nimport request from \"superagent\";\nimport Artwork from \"./Artwork\";\n\nconst { Title } = Typography;\nconst apiUrl = \"https://api.artsy.net/api/search?type=\";\n\nfunction Generator({ tracks }) {\n  const [artwork, setArtwork] = useState(null);\n\n  function generateArt() {\n    request\n      .get(\"/generate\")\n      .then((response) => {\n        let query = collectNames();\n        request\n          .get(apiUrl)\n          .set(\"X-Xapp-Token\", response.text)\n          .query({ q: query })\n          .query({ type: \"artwork\" })\n          .then((res) => {\n            let artworks = res.body._embedded.results;\n            console.log(\"artsy's relevant artwork: \", artworks);\n            console.log(\"token: \", response.text);\n            let chosen = artworks[Math.floor(Math.random() * artworks.length)];\n            setArtwork(chosen);\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((error) => console.log(error));\n  }\n\n  // Returns the songNames array of the first 20 songs\n  function collectNames() {\n    let songs = tracks.items;\n    let songNames = [];\n    let limit = 10;\n    if (songs.length < limit) {\n      limit = songs.length;\n    }\n    for (let i = 0; i < limit; i++) {\n      let currSongName = songs[i].track.name;\n      currSongName.slice(0, currSongName.indexOf(\"-\")); // strips string after '-' to get just name\n      let n = currSongName.indexOf(\"(\");\n      currSongName = currSongName.substring(\n        0,\n        n !== -1 ? n : currSongName.length\n      ); // strips string after '-' to get just name\n      songNames.push(currSongName);\n    }\n    return songNames.join(\" \");\n  }\n\n  return (\n    <div className=\"page\">\n      {artwork ? (\n        <Artwork artwork={artwork} />\n      ) : (\n        <div className=\"page\">\n          <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100%\" }}>\n            <Typography>\n              <Title level={3}>generating...</Title>\n              <Spin size=\"large\" />\n              {generateArt()}\n            </Typography>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Generator;\n"]},"metadata":{},"sourceType":"module"}