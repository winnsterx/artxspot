{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/components/Playlist.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Input, Tag, Row, Button } from \"antd\";\n\nfunction Playlist() {\n  const [tags, setTags] = useState([]);\n  const [complete, setComplete] = useState(false);\n  const colors = [\"magenta\", \"red\", \"volcano\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\"];\n  useEffect(() => {\n    console.log(\"tags: \", tags);\n\n    if (tags.length === 5 && complete === false) {\n      setComplete(true);\n    }\n\n    if (tags.length < 5 && complete === true) {\n      setComplete(false);\n    }\n  });\n\n  function addTag(e) {\n    let tmp = e.target.value;\n    e.target.value = \"\";\n\n    if (tags.includes(tmp)) {\n      alert(\"Add a different word!\");\n    } else {\n      console.log(e.target.value);\n      setTags(tags.concat(tmp));\n    }\n  }\n\n  function removeTag(e) {\n    let tagRemoved = e.target.parentNode.parentNode.textContent || e.target.parentNode.parentNode.parentNode.textContent;\n    setTags(tags.filter(e => e !== tagRemoved));\n  }\n\n  function renderTags() {\n    let tags_arr = [];\n\n    for (let i = 0; i < tags.length; i++) {\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      tags_arr.push( /*#__PURE__*/React.createElement(Tag, {\n        color: color,\n        closable: true,\n        onClose: removeTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, tags[i]));\n    }\n\n    return tags_arr;\n  }\n\n  function generateArt() {\n    console.log(\"generate art\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    align: \"bottom\",\n    style: {\n      height: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    allowClear: true,\n    size: \"large\",\n    placeholder: \"Input five words\",\n    onPressEnter: addTag,\n    style: {\n      width: \"40%\"\n    },\n    disabled: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    align: \"top\",\n    style: {\n      height: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, renderTags()), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    align: \"top\",\n    style: {\n      height: \"47%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    disabled: !complete,\n    onClick: generateArt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Generate Cover Art!\")));\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/components/Playlist.js"],"names":["React","useState","useEffect","Input","Tag","Row","Button","Playlist","tags","setTags","complete","setComplete","colors","console","log","length","addTag","e","tmp","target","value","includes","alert","concat","removeTag","tagRemoved","parentNode","textContent","filter","renderTags","tags_arr","i","color","Math","floor","random","push","generateArt","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Input, Tag, Row, Button } from \"antd\";\n\nfunction Playlist() {\n  const [tags, setTags] = useState([]);\n  const [complete, setComplete] = useState(false);\n  const colors = [\n    \"magenta\",\n    \"red\",\n    \"volcano\",\n    \"orange\",\n    \"gold\",\n    \"lime\",\n    \"green\",\n    \"cyan\",\n    \"blue\",\n    \"geekblue\",\n    \"purple\",\n  ];\n\n  useEffect(() => {\n    console.log(\"tags: \", tags);\n    if (tags.length === 5 && complete === false) {\n      setComplete(true);\n    }\n\n    if (tags.length < 5 && complete === true) {\n      setComplete(false);\n    }\n  });\n\n  function addTag(e) {\n    let tmp = e.target.value;\n    e.target.value = \"\";\n    if (tags.includes(tmp)) {\n      alert(\"Add a different word!\");\n    } else {\n      console.log(e.target.value);\n      setTags(tags.concat(tmp));\n    }\n  }\n\n  function removeTag(e) {\n    let tagRemoved =\n      e.target.parentNode.parentNode.textContent ||\n      e.target.parentNode.parentNode.parentNode.textContent;\n    setTags(tags.filter((e) => e !== tagRemoved));\n  }\n\n  function renderTags() {\n    let tags_arr = [];\n    for (let i = 0; i < tags.length; i++) {\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      tags_arr.push(\n        <Tag color={color} closable onClose={removeTag}>\n          {tags[i]}\n        </Tag>\n      );\n    }\n    return tags_arr;\n  }\n\n  function generateArt() {\n    console.log(\"generate art\");\n  }\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <Row\n        type=\"flex\"\n        justify=\"center\"\n        align=\"bottom\"\n        style={{ height: \"50%\" }}\n      >\n        <Input\n          allowClear\n          size=\"large\"\n          placeholder=\"Input five words\"\n          onPressEnter={addTag}\n          style={{ width: \"40%\" }}\n          disabled={complete}\n        />\n      </Row>\n      <br />\n      <Row type=\"flex\" justify=\"center\" align=\"top\" style={{ height: \"3%\" }}>\n        {renderTags()}\n      </Row>\n      <br />\n      <Row type=\"flex\" justify=\"center\" align=\"top\" style={{ height: \"47%\" }}>\n        <Button type=\"primary\" disabled={!complete} onClick={generateArt}>\n          Generate Cover Art!\n        </Button>\n      </Row>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}