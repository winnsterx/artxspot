{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { clientId, clientSecret, redirectUri } from \"./config\"; // import axios from \"axios\";\n\nimport { Button } from \"antd\";\nimport \"./App.css\"; // Lightweight wrapper for Spotify Web API, see\n// https://github.com/JMPerez/spotify-web-api-js/blob/master/src/spotify-web-api.js\n\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotifyApi = new SpotifyWebApi(); // The ReactDOM is rendering <App/> in index.js\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    if (token === \"\" && window.location.hash != \"\") {\n      console.log(\"Fetching the token now that we are logged in\");\n      const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n\n        return initial;\n      }, {});\n      spotifyApi.setAccessToken(hash.access_token);\n      setToken(hash.access_token);\n    }\n  }, [token]);\n\n  function requestAccess() {\n    console.log(\"Authorize request received.\");\n    window.location.href = \"https://accounts.spotify.com/authorize?client_id=\" + clientId + \"&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=\" + redirectUri;\n  } // function getPlaylists() {\n  //   const playlists = axios\n  //     .get(\"https://api.spotify.com/v1/me/playlists\", {\n  //       headers: { Authorization: \"Bearer \" + token },\n  //     })\n  //     .then((response) => {\n  //       console.log(response);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"Token: \", token);\n  //       console.log(error);\n  //     });\n  //   return playlists;\n  // }\n\n\n  function getPlaylists() {\n    spotifyApi.getUserPlaylists().then(response => {\n      console.log(response);\n    }).catch(error => console.log(error));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, window.location.hash || token ? /*#__PURE__*/React.createElement(Button, {\n    onClick: getPlaylists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Authorized with the Access Token\") : /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: requestAccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Grant Spotify Permission\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/App.js"],"names":["React","useState","useEffect","clientId","clientSecret","redirectUri","Button","SpotifyWebApi","spotifyApi","App","token","setToken","window","location","hash","console","log","substring","split","reduce","initial","item","parts","decodeURIComponent","setAccessToken","access_token","requestAccess","href","getPlaylists","getUserPlaylists","then","response","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,WAAjC,QAAoD,UAApD,C,CAEA;;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,WAAP,C,CAEA;AACA;;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB,C,CAEA;;AAEA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,KAAK,EAAV,IAAgBE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,IAAwB,EAA5C,EAAgD;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACA,YAAMF,IAAI,GAAGF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACVG,SADU,CACA,CADA,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC/B,YAAIA,IAAJ,EAAU;AACR,cAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,UAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,eAAOF,OAAP;AACD,OATU,EASR,EATQ,CAAb;AAUAZ,MAAAA,UAAU,CAACgB,cAAX,CAA0BV,IAAI,CAACW,YAA/B;AACAd,MAAAA,QAAQ,CAACG,IAAI,CAACW,YAAN,CAAR;AACD;AACF,GAhBQ,EAgBN,CAACf,KAAD,CAhBM,CAAT;;AAkBA,WAASgB,aAAT,GAAyB;AACvBX,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBc,IAAhB,GACE,sDACAxB,QADA,GAEA,mWAFA,GAGAE,WAJF;AAKD,GA5BY,CA8Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASuB,YAAT,GAAwB;AACtBpB,IAAAA,UAAU,CACPqB,gBADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAWlB,OAAO,CAACC,GAAR,CAAYiB,KAAZ,CALpB;AAMD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,IAAwBJ,KAAxB,gBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEkB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADD,gBAGC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEF,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,CADF;AAWD;;AAED,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { clientId, clientSecret, redirectUri } from \"./config\";\n\n// import axios from \"axios\";\nimport { Button } from \"antd\";\nimport \"./App.css\";\n\n// Lightweight wrapper for Spotify Web API, see\n// https://github.com/JMPerez/spotify-web-api-js/blob/master/src/spotify-web-api.js\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotifyApi = new SpotifyWebApi();\n\n// The ReactDOM is rendering <App/> in index.js\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    if (token === \"\" && window.location.hash != \"\") {\n      console.log(\"Fetching the token now that we are logged in\");\n      const hash = window.location.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce(function (initial, item) {\n          if (item) {\n            var parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n          }\n          return initial;\n        }, {});\n      spotifyApi.setAccessToken(hash.access_token);\n      setToken(hash.access_token);\n    }\n  }, [token]);\n\n  function requestAccess() {\n    console.log(\"Authorize request received.\");\n    window.location.href =\n      \"https://accounts.spotify.com/authorize?client_id=\" +\n      clientId +\n      \"&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=\" +\n      redirectUri;\n  }\n\n  // function getPlaylists() {\n  //   const playlists = axios\n  //     .get(\"https://api.spotify.com/v1/me/playlists\", {\n  //       headers: { Authorization: \"Bearer \" + token },\n  //     })\n  //     .then((response) => {\n  //       console.log(response);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"Token: \", token);\n  //       console.log(error);\n  //     });\n  //   return playlists;\n  // }\n\n  function getPlaylists() {\n    spotifyApi\n      .getUserPlaylists()\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  return (\n    <div className=\"App\">\n      {window.location.hash || token ? (\n        <Button onClick={getPlaylists}>Authorized with the Access Token</Button>\n      ) : (\n        <Button type=\"primary\" onClick={requestAccess}>\n          Grant Spotify Permission\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}