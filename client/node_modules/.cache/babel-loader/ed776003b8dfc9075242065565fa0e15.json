{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/components/Generator.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Spin, Typography, Row } from \"antd\";\nconst {\n  Title\n} = Typography;\n\nfunction Generator({\n  tracks,\n  tags\n}) {\n  function generateArt() {// checkout runaway ML\n    // just broke up yesterday lol\n  }\n\n  function collectNames() {\n    let songs = tracks.items;\n    let songNames = [];\n    console.log(\"In collect names\", songs);\n\n    for (let i = 0; i < songs.length; i++) {\n      let currSongName = songs[i].track.name;\n      currSongName.slice(0, currSongName.indexOf(\"-\")); // strips string after '-' to get just name\n\n      songNames.push(currSong);\n      console.log(\"Curr name:\", currSong);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"bottom\",\n    style: {\n      minHeight: \"45vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Generating Cover Art...\"), collectNames())), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Generator;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/components/Generator.js"],"names":["React","useState","useEffect","Spin","Typography","Row","Title","Generator","tracks","tags","generateArt","collectNames","songs","items","songNames","console","log","i","length","currSongName","track","name","slice","indexOf","push","currSong","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,QAAsC,MAAtC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,UAAlB;;AAEA,SAASG,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,EAAqC;AACnC,WAASC,WAAT,GAAuB,CACrB;AACA;AACD;;AAED,WAASC,YAAT,GAAwB;AACtB,QAAIC,KAAK,GAAGJ,MAAM,CAACK,KAAnB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,KAAhC;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,YAAY,GAAGP,KAAK,CAACK,CAAD,CAAL,CAASG,KAAT,CAAeC,IAAlC;AACAF,MAAAA,YAAY,CAACG,KAAb,CAAmB,CAAnB,EAAsBH,YAAY,CAACI,OAAb,CAAqB,GAArB,CAAtB,EAFqC,CAEa;;AAClDT,MAAAA,SAAS,CAACU,IAAV,CAAeC,QAAf;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BS,QAA1B;AACD;AACF;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIGf,YAAY,EAJf,CADF,CADF,eASE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Spin, Typography, Row } from \"antd\";\n\nconst { Title } = Typography;\n\nfunction Generator({ tracks, tags }) {\n  function generateArt() {\n    // checkout runaway ML\n    // just broke up yesterday lol\n  }\n\n  function collectNames() {\n    let songs = tracks.items;\n    let songNames = [];\n    console.log(\"In collect names\", songs);\n\n    for (let i = 0; i < songs.length; i++) {\n      let currSongName = songs[i].track.name;\n      currSongName.slice(0, currSongName.indexOf(\"-\")); // strips string after '-' to get just name\n      songNames.push(currSong);\n      console.log(\"Curr name:\", currSong);\n    }\n  }\n  return (\n    <div>\n      <Row justify=\"center\" align=\"bottom\" style={{ minHeight: \"45vh\" }}>\n        <Typography>\n          <Title level={2}>Generating Cover Art...</Title>\n          {/* {console.log(\"tracks: \", tracks)}\n          {console.log(\"tags: \", tags)} */}\n          {collectNames()}\n        </Typography>\n      </Row>\n      <Row justify=\"center\">\n        <Spin size=\"large\" />\n      </Row>\n    </div>\n  );\n}\n\nexport default Generator;\n"]},"metadata":{},"sourceType":"module"}