{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/App.js\";\nimport React, { useState, useEffect } from \"react\"; // import axios from \"axios\";\n\nimport { Button } from \"antd\";\nimport \"./App.css\"; // The ReactDOM is rendering <App/> in index.js\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [auth, setAuth] = useState(false); // const client_id = \"29e77da78fb34f17bbc5f5bab141a50d\"; // Your client id\n  // const client_secret = \"164c8c38eba044e49c570a06e8372192\"; // Your secret\n  // const redirect_uri = \"http://localhost:3000/callback\"; // Your redirect uri\n\n  useEffect(() => {//   if (token === \"\" && login === true) {\n    //     console.log(\"Fetching the token now that we are logged in\");\n    //     const hash = window.location.hash\n    //       .substring(1)\n    //       .split(\"&\")\n    //       .reduce(function (initial, item) {\n    //         if (item) {\n    //           var parts = item.split(\"=\");\n    //           initial[parts[0]] = decodeURIComponent(parts[1]);\n    //         }\n    //         return initial;\n    //       }, {});\n    //     console.log(\"Hash is obtained: \" + hash.access_token);\n    //     setToken(hash.access_token);\n    //   }\n    // console.log(window.location);\n  }, [token, login]);\n\n  function requestAccess() {\n    console.log(\"requested access\");\n    window.location.href = \"https://accounts.spotify.com/authorize?client_id=29e77da78fb34f17bbc5f5bab141a50d&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback\"; // setAuth(true);\n\n    console.log(window.location);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, !auth ? /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: requestAccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Grant Spotify Permission\") : /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Auth is true\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/App.js"],"names":["React","useState","useEffect","Button","App","login","setLogin","token","setToken","auth","setAuth","requestAccess","console","log","window","location","href"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,SAASC,MAAT,QAAuB,MAAvB;AAEA,OAAO,WAAP,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC,CAHa,CAKb;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBQ,EAiBN,CAACK,KAAD,EAAQF,KAAR,CAjBM,CAAT;;AAmBA,WAASM,aAAT,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GACE,kdADF,CAFuB,CAIvB;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,IAAD,gBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEE,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,gBAKC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADF;AAWD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\nimport { Button } from \"antd\";\n\nimport \"./App.css\";\n\n// The ReactDOM is rendering <App/> in index.js\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [auth, setAuth] = useState(false);\n\n  // const client_id = \"29e77da78fb34f17bbc5f5bab141a50d\"; // Your client id\n  // const client_secret = \"164c8c38eba044e49c570a06e8372192\"; // Your secret\n  // const redirect_uri = \"http://localhost:3000/callback\"; // Your redirect uri\n\n  useEffect(() => {\n    //   if (token === \"\" && login === true) {\n    //     console.log(\"Fetching the token now that we are logged in\");\n    //     const hash = window.location.hash\n    //       .substring(1)\n    //       .split(\"&\")\n    //       .reduce(function (initial, item) {\n    //         if (item) {\n    //           var parts = item.split(\"=\");\n    //           initial[parts[0]] = decodeURIComponent(parts[1]);\n    //         }\n    //         return initial;\n    //       }, {});\n    //     console.log(\"Hash is obtained: \" + hash.access_token);\n    //     setToken(hash.access_token);\n    //   }\n    // console.log(window.location);\n  }, [token, login]);\n\n  function requestAccess() {\n    console.log(\"requested access\");\n    window.location.href =\n      \"https://accounts.spotify.com/authorize?client_id=29e77da78fb34f17bbc5f5bab141a50d&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback\";\n    // setAuth(true);\n    console.log(window.location);\n  }\n\n  return (\n    <div className=\"App\">\n      {!auth ? (\n        <Button type=\"primary\" onClick={requestAccess}>\n          Grant Spotify Permission\n        </Button>\n      ) : (\n        <Button>Auth is true</Button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}