{"ast":null,"code":"var _jsxFileName = \"/Users/winker.xiao/Desktop/metspot/src/components/Generator.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Spin, Typography, Row } from \"antd\";\nconst {\n  Title\n} = Typography;\n\nfunction Generator({\n  tracks,\n  tags\n}) {\n  function generateArt() {// checkout runaway ML\n    // just broke up yesterday lol\n  }\n\n  function collectNamesAndTags() {\n    let songs = tracks.items;\n    let limit = 20;\n\n    if (songs.length < 20) {\n      limit = songs.length;\n    }\n\n    for (let i = 0; i < limit; i++) {\n      let currSongName = songs[i].track.name;\n      currSongName.slice(0, currSongName.indexOf(\"-\")); // strips string after '-' to get just name\n\n      tags.push(currSongName);\n    }\n\n    console.log(\"Song Names: \", tags);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"bottom\",\n    style: {\n      minHeight: \"45vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Generating Cover Art...\"), collectNamesAndTags())), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Generator;","map":{"version":3,"sources":["/Users/winker.xiao/Desktop/metspot/src/components/Generator.js"],"names":["React","useState","useEffect","Spin","Typography","Row","Title","Generator","tracks","tags","generateArt","collectNamesAndTags","songs","items","limit","length","i","currSongName","track","name","slice","indexOf","push","console","log","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,QAAsC,MAAtC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,UAAlB;;AAEA,SAASG,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,EAAqC;AACnC,WAASC,WAAT,GAAuB,CACrB;AACA;AACD;;AAED,WAASC,mBAAT,GAA+B;AAC7B,QAAIC,KAAK,GAAGJ,MAAM,CAACK,KAAnB;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;AACrBD,MAAAA,KAAK,GAAGF,KAAK,CAACG,MAAd;AACD;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,UAAIC,YAAY,GAAGL,KAAK,CAACI,CAAD,CAAL,CAASE,KAAT,CAAeC,IAAlC;AACAF,MAAAA,YAAY,CAACG,KAAb,CAAmB,CAAnB,EAAsBH,YAAY,CAACI,OAAb,CAAqB,GAArB,CAAtB,EAF8B,CAEoB;;AAClDZ,MAAAA,IAAI,CAACa,IAAL,CAAUL,YAAV;AACD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bf,IAA5B;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,KAAK,EAAE;AAAEgB,MAAAA,SAAS,EAAE;AAAb,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIGd,mBAAmB,EAJtB,CADF,CADF,eASE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Spin, Typography, Row } from \"antd\";\n\nconst { Title } = Typography;\n\nfunction Generator({ tracks, tags }) {\n  function generateArt() {\n    // checkout runaway ML\n    // just broke up yesterday lol\n  }\n\n  function collectNamesAndTags() {\n    let songs = tracks.items;\n    let limit = 20;\n    if (songs.length < 20) {\n      limit = songs.length;\n    }\n    for (let i = 0; i < limit; i++) {\n      let currSongName = songs[i].track.name;\n      currSongName.slice(0, currSongName.indexOf(\"-\")); // strips string after '-' to get just name\n      tags.push(currSongName);\n    }\n    console.log(\"Song Names: \", tags);\n  }\n\n  return (\n    <div>\n      <Row justify=\"center\" align=\"bottom\" style={{ minHeight: \"45vh\" }}>\n        <Typography>\n          <Title level={2}>Generating Cover Art...</Title>\n          {/* {console.log(\"tracks: \", tracks)}\n          {console.log(\"tags: \", tags)} */}\n          {collectNamesAndTags()}\n        </Typography>\n      </Row>\n      <Row justify=\"center\">\n        <Spin size=\"large\" />\n      </Row>\n    </div>\n  );\n}\n\nexport default Generator;\n"]},"metadata":{},"sourceType":"module"}